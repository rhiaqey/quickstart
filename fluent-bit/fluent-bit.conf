######################################################## SERVICE #######################################################

[SERVICE]
    flush                   1
    daemon                  off
    log_level               info

######################################################### HUB 1 ########################################################

[INPUT]
    name                    prometheus_scrape
    host                    ${HUB_1_HOST}
    port                    ${HUB_1_PORT}
    tag                     hub1.scrape
    metrics_path            /metrics
    scrape_interval         5s

[INPUT]
    name                    health
    host                    ${HUB_1_HOST}
    port                    ${HUB_1_PORT}
    tag                     hub1.health
    interval_sec            5
    interval_nsec           0

[FILTER]
    name                    lua
    match                   hub1.health
    call                    alive_to_number
    script                  /opt/bitnami/fluent-bit/conf/functions.lua

[FILTER]
    name                    log_to_metrics
    match                   hub1.health
    tag                     hub1.log_to_metrics
    metric_mode             gauge
    metric_name             up
    metric_description      Indicate if application is up and running.
    value_field             alive_as_number

[OUTPUT]
    name                    prometheus_remote_write
    match                   hub1.*
    host                    ${PROMETHEUS_OPEN_OBSERVE_HOST}
    port                    ${PROMETHEUS_OPEN_OBSERVE_PORT}
    uri                     ${PROMETHEUS_OPEN_OBSERVE_URI}
    tls                     ${PROMETHEUS_OPEN_OBSERVER_TLS}
    header                  Authorization ${PROMETHEUS_OPEN_OBSERVE_AUTH}
    add_label               instance ${HUB_1_HOST}:${HUB_1_PORT}
    add_label               namespace ${NAMESPACE}
    add_label               org  ${ORGANIZATION}
    add_label               name ${HUB_NAME}
    add_label               node ${NODE}
    add_label               kind hub
    log_response_payload    true

######################################################### HUB 2 ########################################################

[INPUT]
    name                    prometheus_scrape
    host                    ${HUB_2_HOST}
    port                    ${HUB_2_PORT}
    tag                     hub2.scrape
    metrics_path            /metrics
    scrape_interval         5s

[INPUT]
    name                    health
    host                    ${HUB_2_HOST}
    port                    ${HUB_2_PORT}
    tag                     hub2.health
    interval_sec            5
    interval_nsec           0

[FILTER]
    name                    lua
    match                   hub2.health
    call                    alive_to_number
    script                  /opt/bitnami/fluent-bit/conf/functions.lua

[FILTER]
    name                    log_to_metrics
    match                   hub2.health
    tag                     hub2.log_to_metrics
    metric_mode             gauge
    metric_name             up
    metric_description      Indicate if application is up and running.
    value_field             alive_as_number

[OUTPUT]
    name                    prometheus_remote_write
    match                   hub2.*
    host                    ${PROMETHEUS_OPEN_OBSERVE_HOST}
    port                    ${PROMETHEUS_OPEN_OBSERVE_PORT}
    uri                     ${PROMETHEUS_OPEN_OBSERVE_URI}
    tls                     ${PROMETHEUS_OPEN_OBSERVER_TLS}
    header                  Authorization ${PROMETHEUS_OPEN_OBSERVE_AUTH}
    add_label               instance ${HUB_2_HOST}:${HUB_2_PORT}
    add_label               namespace ${NAMESPACE}
    add_label               org  ${ORGANIZATION}
    add_label               name ${HUB_NAME}
    add_label               node ${NODE}
    add_label               kind hub
    log_response_payload    true

####################################################### GATEWAY 1 ######################################################

[INPUT]
    name                    prometheus_scrape
    host                    ${GATEWAY_1_HOST}
    port                    ${GATEWAY_1_PORT}
    tag                     gw1.scrape
    metrics_path            /metrics
    scrape_interval         5s

[INPUT]
    name                    health
    host                    ${GATEWAY_1_HOST}
    port                    ${GATEWAY_1_PORT}
    tag                     gw1.health
    interval_sec            5
    interval_nsec           0

[FILTER]
    name                    lua
    match                   gw1.health
    call                    alive_to_number
    script                  /opt/bitnami/fluent-bit/conf/functions.lua

[FILTER]
    name                    log_to_metrics
    match                   gw1.health
    tag                     gw1.log_to_metrics
    metric_mode             gauge
    metric_name             up
    metric_description      Indicate if application is up and running.
    value_field             alive_as_number

[OUTPUT]
    name                    prometheus_remote_write
    match                   gw1.*
    host                    ${PROMETHEUS_OPEN_OBSERVE_HOST}
    port                    ${PROMETHEUS_OPEN_OBSERVE_PORT}
    uri                     ${PROMETHEUS_OPEN_OBSERVE_URI}
    tls                     ${PROMETHEUS_OPEN_OBSERVER_TLS}
    header                  Authorization ${PROMETHEUS_OPEN_OBSERVE_AUTH}
    add_label               instance ${GATEWAY_1_HOST}:${GATEWAY_1_PORT}
    add_label               namespace ${NAMESPACE}
    add_label               org  ${ORGANIZATION}
    add_label               name ${GATEWAY_1_NAME}
    add_label               node ${NODE}
    add_label               kind gateway
    log_response_payload    true

####################################################### GATEWAY 2 ######################################################

[INPUT]
    name                    prometheus_scrape
    host                    ${GATEWAY_2_HOST}
    port                    ${GATEWAY_2_PORT}
    tag                     gw2.scrape
    metrics_path            /metrics
    scrape_interval         5s

[INPUT]
    name                    health
    host                    ${GATEWAY_2_HOST}
    port                    ${GATEWAY_2_PORT}
    tag                     gw2.health
    interval_sec            5
    interval_nsec           0

[FILTER]
    name                    lua
    match                   gw2.health
    call                    alive_to_number
    script                  /opt/bitnami/fluent-bit/conf/functions.lua

[FILTER]
    name                    log_to_metrics
    match                   gw2.health
    tag                     gw2.log_to_metrics
    metric_mode             gauge
    metric_name             up
    metric_description      Indicate if application is up and running.
    value_field             alive_as_number

[OUTPUT]
    name                    prometheus_remote_write
    match                   gw2.*
    host                    ${PROMETHEUS_OPEN_OBSERVE_HOST}
    port                    ${PROMETHEUS_OPEN_OBSERVE_PORT}
    uri                     ${PROMETHEUS_OPEN_OBSERVE_URI}
    tls                     ${PROMETHEUS_OPEN_OBSERVER_TLS}
    header                  Authorization ${PROMETHEUS_OPEN_OBSERVE_AUTH}
    add_label               instance ${GATEWAY_2_HOST}:${GATEWAY_2_PORT}
    add_label               namespace ${NAMESPACE}
    add_label               org  ${ORGANIZATION}
    add_label               name ${GATEWAY_2_NAME}
    add_label               node ${NODE}
    add_label               kind gateway
    log_response_payload    true
